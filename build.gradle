buildscript {
    ext {
        springBootVersion = '3.1.5'
        springCloudVersion = '2022.0.4' // Spring Cloud BOM 버전 지정
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    compileJava {
        options.encoding = 'UTF-8'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" // Spring Cloud BOM 적용
        }
    }

    dependencies {
        // 공통 의존성
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

        // Spring Boot starters
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-web'


        // JWT 및 인증 관련 라이브러리
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
        implementation 'com.auth0:java-jwt:4.2.1'
        implementation 'commons-codec:commons-codec:1.15'

        // JSON 처리
        implementation 'com.google.code.gson:gson'
        implementation 'org.json:json:20201115'

        // Jakarta API for annotations
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    }

    test {
        useJUnitPlatform()
    }
}

// 모듈 설정
project(':module-database') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        // Database
        implementation 'com.mysql:mysql-connector-j'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
}

project(':module-config-server') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-config-server'
        implementation 'org.springframework.cloud:spring-cloud-vault-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }
}

project(':module-redis') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    }
}

project(':module-eureka') {
    bootJar { enabled = true }
    jar { enabled = true }
    dependencies {
        // Spring Cloud Netflix Eureka Server 추가 (주석 해제 필요)
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }
}

project(':module-gateway') {
    bootJar { enabled = true }
    jar { enabled = true }
    dependencies {
        implementation project(':module-redis')
        implementation("org.springframework.cloud:spring-cloud-starter-gateway")
        implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    }
}

project(':module-api:module-user') {
    bootJar { enabled = true }  // 실제 실행 가능한 JAR을 만들 수 있도록 설정
    jar { enabled = false }     // JAR 파일은 만들지 않음

    dependencies {
        implementation project(':module-database')
        implementation project(':module-redis')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
    }
}

project(':module-api:module-auth') {
    bootJar { enabled = true }  // 실제 실행 가능한 JAR을 만들 수 있도록 설정
    jar { enabled = false }     // JAR 파일은 만들지 않음

    dependencies {
        implementation project(':module-database')
        implementation project(':module-redis')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
    }
}
